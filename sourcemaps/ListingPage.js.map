{"version":3,"sources":["webpack:///./node_modules/lodash/times.js","webpack:///./node_modules/lodash/join.js","webpack:///./src/SmartComponents/ListingPage/FilterDropdown.js","webpack:///./src/redux/actions/listing.js","webpack:///./src/api/listing_view.js","webpack:///./src/PresentationalComponents/ListingView/ListingView.js","webpack:///./src/SmartComponents/ListingPage/SimpleKebab.js","webpack:///./src/SmartComponents/ListingPage/ListingPage.js"],"names":["module","exports","n","iteratee","index","result","Array","nativeJoin","prototype","join","array","separator","call","FilterDropdown","props","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","defineProperty_default","assertThisInitialized_default","isOpen","setState","_event","prevState","react_default","a","createElement","Item","component","isDisabled","Separator","Dropdown","onToggle","onSelect","toggle","DropdownToggle","state","dropdownItems","Component","loadListingData","viewDefinition","type","ASYNC_ACTION_TYPES","LOAD_LISTING_DATA","payload","url","fetch","then","r","ok","json","Error","concat","status","doLoadListingData","sortListingData","column","direction","SORT_LISTING_DATA","pageAndSize","page","size","PAGE_AND_SIZE_LISTING_DATA","ListingView","itemsPerPage","onPage","sortBy","key","filteredColumns","value","data","map","row","id","cells","col","number","count","loaded","insights_frontend_components","header","headers","onSort","rows","mapDataToRows","listingRows","footer","onSetPage","onPerPageSelect","numberOfItems","rawRows","length","filter","columns","c","title","PropTypes","any","isRequired","connect","_ref","_ref$listing","listing","_ref$listing$loaded","_ref$listing$listingR","_ref$listing$rawRows","dispatch","bindActionCreators","withRouter","SimpleKebab","opened","position","DropdownPosition","right","KebabToggle","ListingPage","navigate","_index","history","push","viewDefinitions","location","pathname","split","pop","prevProps","_prevState","loadDefinition","Fragment","items","current","displayName","onNavigate","className","FilterDropdown_FilterDropdown","TextInput","Button","SimpleKebab_SimpleKebab","Link","to","PresentationalComponents_ListingView_ListingView"],"mappings":"2EAmBAA,EAAAC,QAVA,SAAAC,EAAAC,GAIA,IAHA,IAAAC,GAAA,EACAC,EAAAC,MAAAJ,KAEAE,EAAAF,GACAG,EAAAD,GAAAD,EAAAC,GAEA,OAAAC,sBCfA,IAGAE,EAHAD,MAAAE,UAGAC,KAqBAT,EAAAC,QAJA,SAAAS,EAAAC,GACA,aAAAD,EAAA,GAAAH,EAAAK,KAAAF,EAAAC,uOCnBqBE,cACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAJ,GACfE,EAAAG,IAAAD,KAAAE,IAAAN,GAAAD,KAAAK,KAAMH,IADSM,IAAAC,QAAAN,IAAA,WAOR,SAACO,GAAD,OAAYP,EAAKQ,UAAWD,aAPpBF,IAAAC,QAAAN,IAAA,WASR,SAACS,GAAD,OAAYT,EAAKQ,SAAS,SAAAE,GAAS,OAAOH,QAASG,EAAUH,YATrDF,IAAAC,QAAAN,IAAA,gBAaH,kBACZW,EAAAC,EAAAC,cAACC,EAAA,EAAD,aACAH,EAAAC,EAAAC,cAACC,EAAA,GAAaC,UAAU,UAAxB,UACAJ,EAAAC,EAAAC,cAACC,EAAA,GAAaE,YAAU,GAAxB,iBACAL,EAAAC,EAAAC,cAACC,EAAA,GAAaE,YAAU,EAACD,UAAU,UAAnC,mBAGAJ,EAAAC,EAAAC,cAACI,EAAA,EAAD,MACAN,EAAAC,EAAAC,cAACC,EAAA,EAAD,uBACAH,EAAAC,EAAAC,cAACC,EAAA,GAAaC,UAAU,UAAxB,uBAtBeV,IAAAC,QAAAN,IAAA,SAyBV,kBACLW,EAAAC,EAAAC,cAACK,EAAA,GACGC,SAAUnB,EAAKmB,SACfC,SAAUpB,EAAKoB,SACfC,OAAQV,EAAAC,EAAAC,cAACS,EAAA,GAAeH,SAAUnB,EAAKmB,UAA/B,OACRZ,OAAQP,EAAKuB,MAAMhB,OACnBiB,cAAexB,EAAKwB,oBA7BxBxB,EAAKuB,OACDhB,QAAQ,GAHGP,qBADqByB,uGCArC,IAAMC,EAAkB,SAACC,GAAD,OAC3BC,KAAMC,IAAmBC,kBAEzBC,QCYG,SAA2BJ,GAC9B,IAAMK,EAAML,EAAeK,IAE3B,OAAOC,MAAMD,GAAKE,KAAK,SAAAC,GACnB,GAAIA,EAAEC,IAAiB,WAAXD,EAAEP,KACV,OAAOO,EAAEE,OAGb,MAAM,IAAIC,MAAJ,4BAAAC,OAAsCJ,EAAEK,WDpBzCC,CAAkBd,KAGlBe,EAAkB,SAACC,EAAQC,GAAT,OAC3BhB,KAAMiB,IACNd,SAAWY,SAAQC,eAGVE,EAAc,SAACC,EAAMC,GAAP,OACvBpB,KAAMqB,IACNlB,SAAWgB,OAAMC,UEHfE,cAKF,SAAAA,EAAYnD,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAgD,GACflD,EAAAG,IAAAD,KAAAE,IAAA8C,GAAArD,KAAAK,KAAMH,IADSM,IAAAC,QAAAN,IAAA,SAOfmD,aAAc,GACdC,OAAQ,EACRC,YATehD,IAAAC,QAAAN,IAAA,oBAYC,WAChBA,EAAKD,MAAM2B,gBAAgB1B,EAAKD,MAAM4B,kBAbvBtB,IAAAC,QAAAN,IAAA,SAgBV,SAACS,EAAQ6C,EAAKV,GACnB5C,EAAKD,MAAM2C,gBAAgB1C,EAAKuD,gBAAgBD,GAAKE,MAAOZ,GAC5D5C,EAAKQ,UACD6C,QACIhE,MAAOiE,EACPV,iBArBOvC,IAAAC,QAAAN,IAAA,gBA0BH,SAACyD,GAAD,OAAUA,EAAKC,IAC3B,SAAAC,GAAG,OACCC,GAAID,EAAIC,GACRC,MAAO7D,EAAKuD,gBAAgBG,IAAI,SAAAI,GAAG,OAAIH,EAAIG,EAAIN,QAAU,UA7B9CnD,IAAAC,QAAAN,IAAA,YAiCP,SAAC+D,GACT/D,EAAKQ,UACD4C,OAAQW,IAEZ/D,EAAKD,MAAM+C,YAAYiB,EAAQ/D,EAAKuB,MAAM4B,gBArC3B9C,IAAAC,QAAAN,IAAA,kBAwCD,SAACgE,GACfhE,EAAKQ,UACD4C,OAAQ,EACRD,aAAca,IAElBhE,EAAKD,MAAM+C,YAAY,EAAGkB,KA7CX3D,IAAAC,QAAAN,IAAA,SAgDV,kBACLA,EAAKD,MAAMkE,OACPtD,EAAAC,EAAAC,cAACqD,EAAA,OACGb,OAAQrD,EAAKuB,MAAM8B,OACnBc,OAAQnE,EAAKoE,QACbC,OAAQrE,EAAKqE,OACbC,KAAMtE,EAAKuE,cAAcvE,EAAKD,MAAMyE,aACpCC,OACI9D,EAAAC,EAAAC,cAACqD,EAAA,YACGf,aAAcnD,EAAKuB,MAAM4B,aACzBJ,KAAM/C,EAAKuB,MAAM6B,OACjBR,UAAU,KACV8B,UAAW1E,EAAK0E,UAChBC,gBAAiB3E,EAAK2E,gBACtBC,cAAe5E,EAAKD,MAAM8E,QAAU7E,EAAKD,MAAM8E,QAAQC,OAAS,MAI5EnE,EAAAC,EAAAC,cAAA,gCAhEJb,EAAKuD,gBAAkBwB,IAAO/E,EAAKD,MAAM4B,eAAeqD,QAAS,SAAAC,GAAC,OAAIA,EAAEC,QACxElF,EAAKoE,QAAUpE,EAAKuD,gBAAgBG,IAAI,SAAAI,GAAG,OAAIA,EAAIoB,QAHpClF,qBALGyB,iBAApByB,eAEEvB,eAAgBwD,IAAUC,IAAIC,aAwEtC,IAIeC,oBAFS,SAAAC,GAAA,IAAAC,EAAAD,EAAGE,QAAHC,EAAAF,EAAcvB,cAAd,IAAAyB,KAAAC,EAAAH,EAA8BhB,mBAA9B,IAAAmB,OAAAC,EAAAJ,EAAgDX,QAAhD,OAAwEZ,SAAQO,cAAaK,aAA7F,IAAAe,SAFG,SAAAC,GAAQ,OAAIC,8BAAqBpE,kBAAiBgB,kBAAiBI,eAAe+C,IAI9FP,CAA6CS,YAAW7C,sCCvFlD8C,6MAMbzF,QAAQ,+BAGD,SAAC0F,GAAD,OAAYjG,EAAKQ,UAAWD,OAAQ0F,8DAG3C,OACItF,EAAAC,EAAAC,cAACK,EAAA,GACGgF,SAAUC,IAAiBC,MAC3B/E,OAAQV,EAAAC,EAAAC,cAACwF,EAAA,GAAYlF,SAAUjB,KAAKiB,WACpCZ,OAAQL,KAAKqB,MAAMhB,OACnBiB,cAAetB,KAAKH,MAAMyB,uBAjBDC,iBAApBuE,eAEbxE,cAAe2D,IAAUC,IAAIC,0BCK/BiB,cAYF,SAAAA,EAAYvG,GAAO,IAAAC,EAAA,OAAAC,IAAAC,KAAAoG,GACftG,EAAAG,IAAAD,KAAAE,IAAAkG,GAAAzG,KAAAK,KAAMH,IADSM,IAAAC,QAAAN,IAAA,aANN,SAACS,EAAQ8F,EAAUC,GAC5BxG,EAAKD,MAAM0G,QAAQC,KAAKH,KAKTlG,IAAAC,QAAAN,IAAA,iBAFF,kBAAM2G,IAAgB3G,EAAKD,MAAM6G,SAASC,SAASC,MAAM,KAAKC,SAE5D1G,IAAAC,QAAAN,IAAA,qBAKE,SAACgH,EAAWC,GACzBjH,EAAKD,MAAM6G,SAASC,WAAaG,EAAUJ,SAASC,UACpD7G,EAAKQ,UAAWmB,eAAgB3B,EAAKkH,qBAP1B7G,IAAAC,QAAAN,IAAA,SAWV,kBACLW,EAAAC,EAAAC,cAACF,EAAAC,EAAMuG,SAAP,KACIxG,EAAAC,EAAAC,cAACqD,EAAA,WAAD,KACIvD,EAAAC,EAAAC,cAACqD,EAAA,iBAAgBgB,MAAM,cAEvBvE,EAAAC,EAAAC,cAACqD,EAAA,aACGkD,QACMlC,MAAO,UAAWqB,SAAU,aAElCc,QAASrH,EAAKuB,MAAMI,eAAe2F,YACnCC,WAAYvH,EAAKuH,cAGzB5G,EAAAC,EAAAC,cAACqD,EAAA,SAAQtC,KAAK,WACVjB,EAAAC,EAAAC,cAAA,OAAK2G,UAAU,oBACX7G,EAAAC,EAAAC,cAAC4G,EAAD,MACA9G,EAAAC,EAAAC,cAAC6G,EAAA,GAAU9D,GAAG,cAAcJ,MAAM,KAClC7C,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,eACAhH,EAAAC,EAAAC,cAAC+G,GAAYpG,eACRb,EAAAC,EAAAC,cAACC,EAAA,GAAawC,IAAI,MAAMvC,UAAU,OAAMJ,EAAAC,EAAAC,cAACgH,EAAA,GAAKC,GAAI,eAAV,0BAGjDnH,EAAAC,EAAAC,cAACkH,GAAYpG,eAAgB3B,EAAKuB,MAAMI,qBA/BhD3B,EAAKuB,OAAUI,eAAgB3B,EAAKkH,kBAFrBlH,qBAZGyB,iBAApB6E,eAEEM,SAAUzB,IAAUC,IAAIC,WACxBoB,QAAStB,IAAUC,IAAIC,aAgDhBU,sBAAWO","file":"js/ListingPage.js","sourcesContent":["/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n","/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeJoin = arrayProto.join;\n\n/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to convert.\n * @param {string} [separator=','] The element separator.\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */\nfunction join(array, separator) {\n  return array == null ? '' : nativeJoin.call(array, separator);\n}\n\nmodule.exports = join;\n","import React, { Component } from 'react';\nimport { Dropdown, DropdownToggle, DropdownItem, DropdownSeparator } from  '@patternfly/react-core';\n\nexport default class FilterDropdown extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n    }\n\n    onToggle = (isOpen) => this.setState({ isOpen });\n\n    onSelect = (_event) => this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n\n    /* TODO */\n    /* eslint react/jsx-key: \"warn\" */\n    dropdownItems = () => [\n        <DropdownItem>Link</DropdownItem>,\n        <DropdownItem component=\"button\">Action</DropdownItem>,\n        <DropdownItem isDisabled>Disabled Link</DropdownItem>,\n        <DropdownItem isDisabled component=\"button\">\n            Disabled Action\n        </DropdownItem>,\n        <DropdownSeparator />,\n        <DropdownItem>Separated Link</DropdownItem>,\n        <DropdownItem component=\"button\">Separated Action</DropdownItem>\n    ]\n\n    render = () =>\n        <Dropdown\n            onToggle={this.onToggle}\n            onSelect={this.onSelect}\n            toggle={<DropdownToggle onToggle={this.onToggle}>All</DropdownToggle>}\n            isOpen={this.state.isOpen}\n            dropdownItems={this.dropdownItems()}\n        />\n}\n","import { ASYNC_ACTION_TYPES, SORT_LISTING_DATA, PAGE_AND_SIZE_LISTING_DATA } from '../action-types-listing';\nimport { doLoadListingData } from '../../api/listing_view';\n\nexport const loadListingData = (viewDefinition) => ({\n    type: ASYNC_ACTION_TYPES.LOAD_LISTING_DATA,\n    //payload: generateRandomData(100)\n    payload: doLoadListingData(viewDefinition)\n});\n\nexport const sortListingData = (column, direction) => ({\n    type: SORT_LISTING_DATA,\n    payload: { column, direction }\n});\n\nexport const pageAndSize = (page, size) => ({\n    type: PAGE_AND_SIZE_LISTING_DATA,\n    payload: { page, size }\n});\n","import { join, times } from 'lodash';\n\nexport function generateRandomData(num) {\n    let rows = [];\n    for (let i = 1; i <= num; i++) {\n        rows.push({\n            id: i,\n            name: `foobar ${Math.round(Math.random() * 1000)}`,\n            cluster: 'Default',\n            host: `foo.bar.host${Math.round(Math.random() * 1000)}`,\n            ip_address: join(times(4, () => Math.round(Math.random() * 256)), '.'),\n            datastore: 'My store'\n        });\n    }\n\n    return rows;\n}\n\nexport function doLoadListingData(viewDefinition) {\n    const url = viewDefinition.url;\n\n    return fetch(url).then(r => {\n        if (r.ok || r.type === 'opaque') {\n            return r.json();\n        }\n\n        throw new Error(`Unexpected response code ${r.status}`);\n    });\n}\n\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Pagination, Table } from '@red-hat-insights/insights-frontend-components';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport filter from 'lodash/filter';\n\nimport { loadListingData, sortListingData, pageAndSize } from '../../redux/actions/listing';\n\n/* FIXME */\n/*eslint react/prop-types: 1*/\n\nclass ListingView extends Component {\n    static propTypes = {\n        viewDefinition: PropTypes.any.isRequired\n    }\n\n    constructor(props) {\n        super(props);\n        this.filteredColumns = filter(this.props.viewDefinition.columns, c => c.title);\n        this.headers = this.filteredColumns.map(col => col.title);\n    }\n\n    state = {\n        itemsPerPage: 10,\n        onPage: 1,\n        sortBy: {}\n    }\n\n    componentDidMount = () => {\n        this.props.loadListingData(this.props.viewDefinition);\n    }\n\n    onSort = (_event, key, direction) => {\n        this.props.sortListingData(this.filteredColumns[key].value, direction);\n        this.setState({\n            sortBy: {\n                index: key,\n                direction\n            }\n        });\n    }\n\n    mapDataToRows = (data) => data.map(\n        row => ({\n            id: row.id,\n            cells: this.filteredColumns.map(col => row[col.value] || '')\n        })\n    );\n\n    onSetPage = (number) => {\n        this.setState({\n            onPage: number\n        });\n        this.props.pageAndSize(number, this.state.itemsPerPage);\n    }\n\n    onPerPageSelect = (count) => {\n        this.setState({\n            onPage: 1,\n            itemsPerPage: count\n        });\n        this.props.pageAndSize(1, count);\n    }\n\n    render = () =>\n        this.props.loaded ?\n            <Table\n                sortBy={this.state.sortBy}\n                header={this.headers}\n                onSort={this.onSort}\n                rows={this.mapDataToRows(this.props.listingRows)}\n                footer={\n                    <Pagination\n                        itemsPerPage={this.state.itemsPerPage}\n                        page={this.state.onPage}\n                        direction='up'\n                        onSetPage={this.onSetPage}\n                        onPerPageSelect={this.onPerPageSelect}\n                        numberOfItems={this.props.rawRows ? this.props.rawRows.length : 0}\n                    />\n                }\n            /> :\n            <div>Loading data...</div>\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ loadListingData, sortListingData, pageAndSize }, dispatch);\n\nconst mapStateToProps = ({ listing: { loaded = false, listingRows = [], rawRows = [] } }) => ({ loaded, listingRows, rawRows });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ListingView));\n","import React, { Component } from 'react';\nimport { Dropdown, DropdownPosition, KebabToggle } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nexport default class SimpleKebab extends Component {\n    static propTypes = {\n        dropdownItems: PropTypes.any.isRequired\n    }\n\n    state = {\n        isOpen: false\n    }\n\n    onToggle = (opened) => this.setState({ isOpen: opened });\n\n    render() {\n        return (\n            <Dropdown\n                position={DropdownPosition.right}\n                toggle={<KebabToggle onToggle={this.onToggle}/>}\n                isOpen={this.state.isOpen}\n                dropdownItems={this.props.dropdownItems} />\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Breadcrumbs, PageHeader, PageHeaderTitle, Section } from '@red-hat-insights/insights-frontend-components';\nimport FilterDropdown from './FilterDropdown';\nimport { Button, TextInput, DropdownItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nimport ListingView from '../../PresentationalComponents/ListingView/ListingView';\nimport SimpleKebab from './SimpleKebab';\nimport { viewDefinitions } from '../../views/viewDefinitions';\n\nclass ListingPage extends Component {\n    static propTypes = {\n        location: PropTypes.any.isRequired,\n        history: PropTypes.any.isRequired\n    }\n\n    onNavigate = (_event, navigate, _index) => {\n        this.props.history.push(navigate);\n    }\n\n    loadDefinition = () => viewDefinitions[this.props.location.pathname.split('/').pop()]\n\n    constructor(props) {\n        super(props);\n        this.state = { viewDefinition: this.loadDefinition() };\n    }\n\n    componentDidUpdate = (prevProps, _prevState) => {\n        if (this.props.location.pathname !== prevProps.location.pathname) {\n            this.setState({ viewDefinition: this.loadDefinition() });\n        }\n    }\n\n    render = () => (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title='Providers'/>\n                {/**<ConnectedBreadcrumbs current=\"Place\" />**/}\n                <Breadcrumbs\n                    items={[\n                        { title: 'Sources', navigate: '/sources' }\n                    ]}\n                    current={this.state.viewDefinition.displayName}\n                    onNavigate={this.onNavigate}\n                />\n            </PageHeader>\n            <Section type='content'>\n                <div className='pf-c-input-group'>\n                    <FilterDropdown />\n                    <TextInput id='filter_text' value=''/>\n                    <Button>Action</Button>\n                    <SimpleKebab dropdownItems={\n                        [<DropdownItem key='foo' component='div'><Link to={'/providers/'}>Back to Providers</Link></DropdownItem>]\n                    }/>\n                </div>\n                <ListingView viewDefinition={this.state.viewDefinition}/>\n            </Section>\n        </React.Fragment>\n    )\n};\n\nexport default withRouter(ListingPage);\n"],"sourceRoot":""}
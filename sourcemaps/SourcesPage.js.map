{"version":3,"sources":["webpack:///./src/components/SourcesSimpleView.js","webpack:///./src/pages/SourcesPage.js"],"names":["RowLoader","props","react_default","a","createElement","react_content_loader_es","extends_default","height","width","x","y","rx","ry","SourcesSimpleView","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","defineProperty_default","assertThisInitialized_default","loadEntities","_event","key","checked","selectEntity","direction","sortEntities","filteredColumns","value","setState","sortBy","index","_row","rowKey","expandEntity","i","entities","id","title","onClick","_ev","removeSource","sourceIndexToId","then","_this$props","loaded","rowData","flatten","map","item","objectSpread_default","cells","col","Table","aria-label","onCollapse","onSort","state","rows","headers","actions","renderActions","Header","Body","className","SourcesSimpleView_RowLoader","filter","sourcesViewDefinition","columns","c","transforms","sortable","React","Component","propTypes","PropTypes","arrayOf","shape","string","isRequired","func","any","numberOfEntities","number","bool","history","defaultProps","connect","_ref","_ref$providers","providers","dispatch","bindActionCreators","withRouter","SourcesPage","loadSourceTypes","values","_formState","createSource","replace","catch","error","console","log","filterColumn","filterValue","filterProviders","onPage","pageAndSize","itemsPerPage","count","form","wizardForm","sourceTypes","Fragment","Modal","isLarge","isOpen","location","pathname","onClose","goBack","SourcesFormRenderer","initialValues","schemaType","schema","uiSchema","showFormControls","onSubmit","submitProvider","insights_frontend_components","Link","to","Button","variant","type","Card","CardBody","components_SourcesSimpleView","providerColumns","CardFooter","page","onSetPage","onPerPageSelect","numberOfItems","addProvider"],"mappings":"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","file":"js/SourcesPage.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, sortable } from '@patternfly/react-table';\n\nimport flatten from 'lodash/flatten';\nimport filter from 'lodash/filter';\nimport ContentLoader from 'react-content-loader';\n\nimport { loadEntities, selectEntity, expandEntity, removeSource, sortEntities } from '../redux/actions/providers';\n\nimport { sourcesViewDefinition } from '../views/sourcesViewDefinition';\n\nconst RowLoader = props => (\n    <ContentLoader\n        height={20}\n        width={480}\n        {...props}\n    >\n        <rect x=\"30\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"7\" />\n        <rect x=\"300\" y=\"0\" rx=\"3\" ry=\"3\" width=\"70\" height=\"7\" />\n        <rect x=\"385\" y=\"0\" rx=\"3\" ry=\"3\" width=\"95\" height=\"7\" />\n        <rect x=\"50\" y=\"12\" rx=\"3\" ry=\"3\" width=\"80\" height=\"7\" />\n        <rect x=\"150\" y=\"12\" rx=\"3\" ry=\"3\" width=\"200\" height=\"7\" />\n        <rect x=\"360\" y=\"12\" rx=\"3\" ry=\"3\" width=\"120\" height=\"7\" />\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"20\" height=\"20\" />\n    </ContentLoader>\n);\n\nclass SourcesSimpleView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filteredColumns = filter(sourcesViewDefinition.columns, c => c.title);\n\n        this.headers = this.filteredColumns.map(col => ({\n            title: col.title,\n            transforms: [sortable]\n        }));\n\n        this.state = {\n            sortBy: {}\n        };\n    }\n\n    componentDidMount = () => this.props.loadEntities();\n\n    onItemSelect = (_event, key, checked) => this.props.selectEntity(key, checked);\n\n    onSort = (_event, key, direction) => {\n        this.props.sortEntities(this.filteredColumns[key].value, direction);\n        this.setState({\n            sortBy: {\n                index: key,\n                direction\n            }\n        });\n    }\n\n    onExpandClick = (_event, _row, rowKey) => this.props.expandEntity(rowKey, true);\n\n    sourceIndexToId = (i) => this.props.entities[i].id;\n\n    renderActions = () => (\n        [\n            {\n                title: 'Remove Source',\n                onClick: (_ev, i) => {\n                    this.props.removeSource(this.sourceIndexToId(i)).then(() => {\n                        this.props.loadEntities();\n                    });\n                }\n            }\n        ]\n    );\n\n    render = () => {\n        const { entities, loaded } = this.props;\n        const rowData = flatten(entities.map(item => (\n            [{ ...item, cells: this.filteredColumns.map(col => item[col.value] || '') }]\n        )));\n\n        if (loaded) {\n            return (\n                <Table\n                    aria-label=\"List of Sources\"\n                    onCollapse={this.onCollapse}\n                    onSort={this.onSort}\n                    sortBy={this.state.sortBy}\n                    rows={rowData}\n                    cells={this.headers}\n                    actions={this.renderActions()}\n                >\n                    <TableHeader />\n                    <TableBody />\n                </Table>\n            );\n        }\n\n        return (\n            <table className=\"sources-placeholder-table pf-m-compact ins-entity-table\">\n                <tbody>\n                    <tr><td><RowLoader /></td></tr>\n                    <tr><td><RowLoader /></td></tr>\n                </tbody>\n            </table>\n        );\n    }\n};\n\nSourcesSimpleView.propTypes = {\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        title: PropTypes.string\n    })).isRequired,\n\n    loadEntities: PropTypes.func.isRequired,\n    selectEntity: PropTypes.func.isRequired,\n    expandEntity: PropTypes.func.isRequired,\n    removeSource: PropTypes.func.isRequired,\n    sortEntities: PropTypes.func.isRequired,\n\n    entities: PropTypes.arrayOf(PropTypes.any),\n    numberOfEntities: PropTypes.number.isRequired,\n    loaded: PropTypes.bool.isRequired,\n\n    history: PropTypes.any.isRequired\n};\n\nSourcesSimpleView.defaultProps = {\n    entities: [],\n    numberOfEntities: 0,\n    loaded: false\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    loadEntities, selectEntity, expandEntity, sortEntities, removeSource }, dispatch);\n\nconst mapStateToProps = ({ providers: { entities, numberOfEntities, loaded } }) => ({ entities, numberOfEntities, loaded });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SourcesSimpleView));\n\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle, Pagination, Section } from '@red-hat-insights/insights-frontend-components';\n\n//import './provider-page.scss';\nimport { addProvider, createSource, filterProviders, loadEntities, loadSourceTypes } from '../redux/actions/providers';\n\nimport { Button } from '@patternfly/react-core';\nimport { Card, CardBody, CardFooter, Modal } from '@patternfly/react-core';\n\nimport SourcesSimpleView from '../components/SourcesSimpleView';\n//import SourcesFilter from '../components/SourcesFilter';\n\nimport { providerColumns } from '../SmartComponents/ProviderPage/providerColumns';\nimport { wizardForm } from '../SmartComponents/ProviderPage/providerForm';\nimport SourcesFormRenderer from '../Utilities/SourcesFormRenderer';\n\nimport { pageAndSize } from '../redux/actions/providers';\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\nclass SourcesPage extends Component {\n    static propTypes = {\n        addProvider: PropTypes.func.isRequired,\n        createSource: PropTypes.func.isRequired,\n        filterProviders: PropTypes.func.isRequired,\n        loadEntities: PropTypes.func.isRequired,\n        loadSourceTypes: PropTypes.func.isRequired,\n        pageAndSize: PropTypes.func.isRequired,\n\n        numberOfEntities: PropTypes.number.isRequired,\n        sourceTypes: PropTypes.arrayOf(PropTypes.any),\n\n        location: PropTypes.any.isRequired,\n        history: PropTypes.any.isRequired\n    };\n\n    componentDidMount = () => {\n        this.props.loadSourceTypes();\n    }\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            itemsPerPage: 10,\n            onPage: 1\n        };\n    }\n\n    submitProvider = (values, _formState) => {\n        this.props.createSource(values).then(() => {\n            this.props.history.replace('/');\n            this.props.loadEntities();\n        }).catch(error => {\n            console.log('CATCH:'); console.log(error);\n            this.props.history.replace('/');\n        });\n    }\n\n    onFilter = (filterColumn, filterValue) => {\n        console.log('onFilter', filterColumn, filterValue);\n        this.props.filterProviders(filterColumn, filterValue);\n    }\n\n    onSetPage = (number) => {\n        this.setState({\n            onPage: number\n        });\n        this.props.pageAndSize(number, this.state.itemsPerPage);\n    }\n\n    onPerPageSelect = (count) => {\n        this.setState({\n            onPage: 1,\n            itemsPerPage: count\n        });\n        this.props.pageAndSize(1, count);\n    }\n\n    render = () => {\n        // const filterColumns = filter(providerColumns, c => c.value);\n\n        const form = wizardForm(this.props.sourceTypes || []);\n\n        return (\n            <React.Fragment>\n                <Modal\n                    className='add-source'\n                    isLarge title='Add a New Source'\n                    isOpen={this.props.location.pathname === '/new'}\n                    onClose={this.props.history.goBack}>\n\n                    <SourcesFormRenderer\n                        initialValues={form.initialValues}\n                        schemaType={form.schemaType}\n                        schema={form.schema}\n                        uiSchema={form.uiSchema}\n                        showFormControls={form.showFormControls}\n                        onSubmit={this.submitProvider}\n                    />\n                </Modal>\n                <PageHeader>\n                    <PageHeaderTitle title='Sources'/>\n                    <Link to='/new'>\n                        <Button className='pull-right' variant='secondary'> Add a New Source </Button>\n                    </Link>\n                </PageHeader>\n                <Section type='content'>\n                    <Card>\n                        {/*<CardHeader>\n                            <SourcesFilter columns={filterColumns} onFilter={this.onFilter}/>\n                        </CardHeader>*/}\n                        <CardBody>\n                            <SourcesSimpleView columns={providerColumns}/>\n                        </CardBody>\n                        <CardFooter>\n                            <Pagination\n                                itemsPerPage={this.state.itemsPerPage}\n                                page={this.state.onPage}\n                                direction='up'\n                                onSetPage={this.onSetPage}\n                                onPerPageSelect={this.onPerPageSelect}\n                                numberOfItems={this.props.numberOfEntities || 0}\n                            />\n                        </CardFooter>\n                    </Card>\n                </Section>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    { addProvider, createSource, filterProviders, loadEntities,\n        loadSourceTypes, pageAndSize }, dispatch);\n\nconst mapStateToProps = ({ providers: { numberOfEntities, sourceTypes } }) => ({ numberOfEntities, sourceTypes });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SourcesPage));\n"],"sourceRoot":""}
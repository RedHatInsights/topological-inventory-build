{"version":3,"sources":["webpack:///./src/components/SourcesSimpleView.js","webpack:///./src/pages/SourcesPage.js"],"names":["RowLoader","props","SourcesSimpleView","loadEntities","_event","key","checked","selectEntity","direction","sortEntities","filteredColumns","value","setState","sortBy","index","_row","rowKey","expandEntity","i","entities","id","title","onClick","_ev","removeSource","sourceIndexToId","then","loaded","rowData","flatten","map","item","cells","col","onCollapse","onSort","state","headers","renderActions","filter","sourcesViewDefinition","columns","c","transforms","sortable","React","Component","propTypes","PropTypes","arrayOf","shape","string","isRequired","func","any","numberOfEntities","number","bool","history","defaultProps","mapDispatchToProps","dispatch","bindActionCreators","mapStateToProps","providers","connect","withRouter","SourcesPage","values","_formState","createSource","replace","catch","error","console","log","filterColumn","filterValue","filterProviders","onPage","pageAndSize","itemsPerPage","count","form","wizardForm","location","pathname","goBack","initialValues","schemaType","schema","uiSchema","showFormControls","submitProvider","providerColumns","onSetPage","onPerPageSelect","addProvider"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SACnB,2DAAC,6DAAD;AACI,UAAM,EAAE,EADZ;AAEI,SAAK,EAAE;AAFX,KAGQA,KAHR,GAKI;AAAM,KAAC,EAAC,IAAR;AAAa,KAAC,EAAC,GAAf;AAAmB,MAAE,EAAC,GAAtB;AAA0B,MAAE,EAAC,GAA7B;AAAiC,SAAK,EAAC,KAAvC;AAA6C,UAAM,EAAC;AAApD,IALJ,EAMI;AAAM,KAAC,EAAC,KAAR;AAAc,KAAC,EAAC,GAAhB;AAAoB,MAAE,EAAC,GAAvB;AAA2B,MAAE,EAAC,GAA9B;AAAkC,SAAK,EAAC,IAAxC;AAA6C,UAAM,EAAC;AAApD,IANJ,EAOI;AAAM,KAAC,EAAC,KAAR;AAAc,KAAC,EAAC,GAAhB;AAAoB,MAAE,EAAC,GAAvB;AAA2B,MAAE,EAAC,GAA9B;AAAkC,SAAK,EAAC,IAAxC;AAA6C,UAAM,EAAC;AAApD,IAPJ,EAQI;AAAM,KAAC,EAAC,IAAR;AAAa,KAAC,EAAC,IAAf;AAAoB,MAAE,EAAC,GAAvB;AAA2B,MAAE,EAAC,GAA9B;AAAkC,SAAK,EAAC,IAAxC;AAA6C,UAAM,EAAC;AAApD,IARJ,EASI;AAAM,KAAC,EAAC,KAAR;AAAc,KAAC,EAAC,IAAhB;AAAqB,MAAE,EAAC,GAAxB;AAA4B,MAAE,EAAC,GAA/B;AAAmC,SAAK,EAAC,KAAzC;AAA+C,UAAM,EAAC;AAAtD,IATJ,EAUI;AAAM,KAAC,EAAC,KAAR;AAAc,KAAC,EAAC,IAAhB;AAAqB,MAAE,EAAC,GAAxB;AAA4B,MAAE,EAAC,GAA/B;AAAmC,SAAK,EAAC,KAAzC;AAA+C,UAAM,EAAC;AAAtD,IAVJ,EAWI;AAAM,KAAC,EAAC,GAAR;AAAY,KAAC,EAAC,GAAd;AAAkB,MAAE,EAAC,GAArB;AAAyB,MAAE,EAAC,GAA5B;AAAgC,SAAK,EAAC,IAAtC;AAA2C,UAAM,EAAC;AAAlD,IAXJ,CADmB;AAAA,CAAvB;;IAgBMC,iB;;;;;AACF,6BAAYD,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qNAAMA,KAAN;;AADe,uRAeC;AAAA,aAAM,MAAKA,KAAL,CAAWE,YAAX,EAAN;AAAA,KAfD;;AAAA,kRAiBJ,UAACC,MAAD,EAASC,GAAT,EAAcC,OAAd;AAAA,aAA0B,MAAKL,KAAL,CAAWM,YAAX,CAAwBF,GAAxB,EAA6BC,OAA7B,CAA1B;AAAA,KAjBI;;AAAA,4QAmBV,UAACF,MAAD,EAASC,GAAT,EAAcG,SAAd,EAA4B;AACjC,YAAKP,KAAL,CAAWQ,YAAX,CAAwB,MAAKC,eAAL,CAAqBL,GAArB,EAA0BM,KAAlD,EAAyDH,SAAzD;;AACA,YAAKI,QAAL,CAAc;AACVC,cAAM,EAAE;AACJC,eAAK,EAAET,GADH;AAEJG,mBAAS,EAATA;AAFI;AADE,OAAd;AAMH,KA3BkB;;AAAA,mRA6BH,UAACJ,MAAD,EAASW,IAAT,EAAeC,MAAf;AAAA,aAA0B,MAAKf,KAAL,CAAWgB,YAAX,CAAwBD,MAAxB,EAAgC,IAAhC,CAA1B;AAAA,KA7BG;;AAAA,qRA+BD,UAACE,CAAD;AAAA,aAAO,MAAKjB,KAAL,CAAWkB,QAAX,CAAoBD,CAApB,EAAuBE,EAA9B;AAAA,KA/BC;;AAAA,mRAiCH;AAAA,aACZ,CACI;AACIC,aAAK,EAAE,eADX;AAEIC,eAAO,EAAE,iBAACC,GAAD,EAAML,CAAN,EAAY;AACjB,gBAAKjB,KAAL,CAAWuB,YAAX,CAAwB,MAAKC,eAAL,CAAqBP,CAArB,CAAxB,EAAiDQ,IAAjD,CAAsD,YAAM;AACxD,kBAAKzB,KAAL,CAAWE,YAAX;AACH,WAFD;AAGH;AANL,OADJ,CADY;AAAA,KAjCG;;AAAA,4QA8CV,YAAM;AAAA,wBACkB,MAAKF,KADvB;AAAA,UACHkB,QADG,eACHA,QADG;AAAA,UACOQ,MADP,eACOA,MADP;AAEX,UAAMC,OAAO,GAAGC,sDAAO,CAACV,QAAQ,CAACW,GAAT,CAAa,UAAAC,IAAI;AAAA,eACrC,CAAC,+EAAKA,IAAN;AAAYC,eAAK,EAAE,MAAKtB,eAAL,CAAqBoB,GAArB,CAAyB,UAAAG,GAAG;AAAA,mBAAIF,IAAI,CAACE,GAAG,CAACtB,KAAL,CAAJ,IAAmB,EAAvB;AAAA,WAA5B;AAAnB,WADqC;AAAA,OAAjB,CAAD,CAAvB;;AAIA,UAAIgB,MAAJ,EAAY;AACR,eACI,2DAAC,8DAAD;AACI,wBAAW,iBADf;AAEI,oBAAU,EAAE,MAAKO,UAFrB;AAGI,gBAAM,EAAE,MAAKC,MAHjB;AAII,gBAAM,EAAE,MAAKC,KAAL,CAAWvB,MAJvB;AAKI,cAAI,EAAEe,OALV;AAMI,eAAK,EAAE,MAAKS,OANhB;AAOI,iBAAO,EAAE,MAAKC,aAAL;AAPb,WASI,2DAAC,oEAAD,OATJ,EAUI,2DAAC,kEAAD,OAVJ,CADJ;AAcH;;AAED,aACI;AAAO,iBAAS,EAAC;AAAjB,SACI,0EACI,uEAAI,uEAAI,2DAAC,SAAD,OAAJ,CAAJ,CADJ,EAEI,uEAAI,uEAAI,2DAAC,SAAD,OAAJ,CAAJ,CAFJ,CADJ,CADJ;AAQH,KA7EkB;;AAGf,UAAK5B,eAAL,GAAuB6B,qDAAM,CAACC,mFAAqB,CAACC,OAAvB,EAAgC,UAAAC,CAAC;AAAA,aAAIA,CAAC,CAACrB,KAAN;AAAA,KAAjC,CAA7B;AAEA,UAAKgB,OAAL,GAAe,MAAK3B,eAAL,CAAqBoB,GAArB,CAAyB,UAAAG,GAAG;AAAA,aAAK;AAC5CZ,aAAK,EAAEY,GAAG,CAACZ,KADiC;AAE5CsB,kBAAU,EAAE,CAACC,iEAAD;AAFgC,OAAL;AAAA,KAA5B,CAAf;AAKA,UAAKR,KAAL,GAAa;AACTvB,YAAM,EAAE;AADC,KAAb;AAVe;AAalB;;;EAd2BgC,4CAAK,CAACC,S;;AA+ErC;AAED5C,iBAAiB,CAAC6C,SAAlB,GAA8B;AAC1BN,SAAO,EAAEO,iDAAS,CAACC,OAAV,CAAkBD,iDAAS,CAACE,KAAV,CAAgB;AACvCvC,SAAK,EAAEqC,iDAAS,CAACG,MADsB;AAEvC9B,SAAK,EAAE2B,iDAAS,CAACG;AAFsB,GAAhB,CAAlB,EAGLC,UAJsB;AAM1BjD,cAAY,EAAE6C,iDAAS,CAACK,IAAV,CAAeD,UANH;AAO1B7C,cAAY,EAAEyC,iDAAS,CAACK,IAAV,CAAeD,UAPH;AAQ1BnC,cAAY,EAAE+B,iDAAS,CAACK,IAAV,CAAeD,UARH;AAS1B5B,cAAY,EAAEwB,iDAAS,CAACK,IAAV,CAAeD,UATH;AAU1B3C,cAAY,EAAEuC,iDAAS,CAACK,IAAV,CAAeD,UAVH;AAY1BjC,UAAQ,EAAE6B,iDAAS,CAACC,OAAV,CAAkBD,iDAAS,CAACM,GAA5B,CAZgB;AAa1BC,kBAAgB,EAAEP,iDAAS,CAACQ,MAAV,CAAiBJ,UAbT;AAc1BzB,QAAM,EAAEqB,iDAAS,CAACS,IAAV,CAAeL,UAdG;AAgB1BM,SAAO,EAAEV,iDAAS,CAACM,GAAV,CAAcF;AAhBG,CAA9B;AAmBAlD,iBAAiB,CAACyD,YAAlB,GAAiC;AAC7BxC,UAAQ,EAAE,EADmB;AAE7BoC,kBAAgB,EAAE,CAFW;AAG7B5B,QAAM,EAAE;AAHqB,CAAjC;;AAMA,IAAMiC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAIC,iEAAkB,CAAC;AACtD3D,gBAAY,EAAZA,sEADsD;AACxCI,gBAAY,EAAZA,sEADwC;AAC1BU,gBAAY,EAAZA,sEAD0B;AACZR,gBAAY,EAAZA,sEADY;AACEe,gBAAY,EAAZA,sEAAYA;AADd,GAAD,EACmBqC,QADnB,CAAtB;AAAA,CAAnC;;AAGA,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,4BAAGC,SAAH;AAAA,MAAgB7C,QAAhB,kBAAgBA,QAAhB;AAAA,MAA0BoC,gBAA1B,kBAA0BA,gBAA1B;AAAA,MAA4C5B,MAA5C,kBAA4CA,MAA5C;AAAA,SAA4D;AAAER,YAAQ,EAARA,QAAF;AAAYoC,oBAAgB,EAAhBA,gBAAZ;AAA8B5B,UAAM,EAANA;AAA9B,GAA5D;AAAA,CAAxB;;AAEesC,2HAAO,CAACF,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CM,oEAAU,CAAChE,iBAAD,CAAvD,CAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9IA;AACA;AACA;AACA;AACA;CAGA;;AACA;AAEA;AACA;CAGA;;AAEA;AACA;AACA;AAEA;AAEA;;;;;;;;IAOMiE,W;;;;;AAcF,uBAAalE,KAAb,EAAoB;AAAA;;AAAA;;AAChB,+MAAMA,KAAN;;AADgB,oRASH,UAACmE,MAAD,EAASC,UAAT,EAAwB;AACrC,YAAKpE,KAAL,CAAWqE,YAAX,CAAwBF,MAAxB,EAAgC1C,IAAhC,CAAqC,YAAM;AACvC,cAAKzB,KAAL,CAAWyD,OAAX,CAAmBa,OAAnB,CAA2B,GAA3B;;AACA,cAAKtE,KAAL,CAAWE,YAAX;AACH,OAHD,EAGGqE,KAHH,CAGS,UAAAC,KAAK,EAAI;AACdC,eAAO,CAACC,GAAR,CAAY,QAAZ;AAAuBD,eAAO,CAACC,GAAR,CAAYF,KAAZ;;AACvB,cAAKxE,KAAL,CAAWyD,OAAX,CAAmBa,OAAnB,CAA2B,GAA3B;AACH,OAND;AAOH,KAjBmB;;AAAA,8QAmBT,UAACK,YAAD,EAAeC,WAAf,EAA+B;AACtCH,aAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,YAAxB,EAAsCC,WAAtC;;AACA,YAAK5E,KAAL,CAAW6E,eAAX,CAA2BF,YAA3B,EAAyCC,WAAzC;AACH,KAtBmB;;AAAA,+QAwBR,UAACrB,MAAD,EAAY;AACpB,YAAK5C,QAAL,CAAc;AACVmE,cAAM,EAAEvB;AADE,OAAd;;AAGA,YAAKvD,KAAL,CAAW+E,WAAX,CAAuBxB,MAAvB,EAA+B,MAAKpB,KAAL,CAAW6C,YAA1C;AACH,KA7BmB;;AAAA,qRA+BF,UAACC,KAAD,EAAW;AACzB,YAAKtE,QAAL,CAAc;AACVmE,cAAM,EAAE,CADE;AAEVE,oBAAY,EAAEC;AAFJ,OAAd;;AAIA,YAAKjF,KAAL,CAAW+E,WAAX,CAAuB,CAAvB,EAA0BE,KAA1B;AACH,KArCmB;;AAAA,4QAuCX,YAAM;AACX;AAEA,UAAMC,IAAI,GAAGC,sFAAb;AAEA,aACI,2DAAC,4CAAD,CAAO,QAAP,QACI,2DAAC,6DAAD;AACI,iBAAS,EAAC,YADd;AAEI,eAAO,MAFX;AAEY,aAAK,EAAC,kBAFlB;AAGI,cAAM,EAAE,MAAKnF,KAAL,CAAWoF,QAAX,CAAoBC,QAApB,KAAiC,MAH7C;AAII,eAAO,EAAE,MAAKrF,KAAL,CAAWyD,OAAX,CAAmB6B;AAJhC,SAMI,2DAAC,uEAAD;AACI,qBAAa,EAAEJ,IAAI,CAACK,aADxB;AAEI,kBAAU,EAAEL,IAAI,CAACM,UAFrB;AAGI,cAAM,EAAEN,IAAI,CAACO,MAHjB;AAII,gBAAQ,EAAEP,IAAI,CAACQ,QAJnB;AAKI,wBAAgB,EAAER,IAAI,CAACS,gBAL3B;AAMI,gBAAQ,EAAE,MAAKC;AANnB,QANJ,CADJ,EAgBI,2DAAC,0FAAD,QACI,2DAAC,+FAAD;AAAiB,aAAK,EAAC;AAAvB,QADJ,EAEI,2DAAC,qDAAD;AAAM,UAAE,EAAC;AAAT,SACI,2DAAC,8DAAD;AAAQ,iBAAS,EAAC,YAAlB;AAA+B,eAAO,EAAC;AAAvC,8BADJ,CAFJ,CAhBJ,EAsBI,2DAAC,uFAAD;AAAS,YAAI,EAAC;AAAd,SACI,2DAAC,4DAAD,QAII,2DAAC,gEAAD,QACI,2DAAC,sEAAD;AAAmB,eAAO,EAAEC,8FAAeA;AAA3C,QADJ,CAJJ,EAOI,2DAAC,kEAAD,QACI,2DAAC,0FAAD;AACI,oBAAY,EAAE,MAAK1D,KAAL,CAAW6C,YAD7B;AAEI,YAAI,EAAE,MAAK7C,KAAL,CAAW2C,MAFrB;AAGI,iBAAS,EAAC,IAHd;AAII,iBAAS,EAAE,MAAKgB,SAJpB;AAKI,uBAAe,EAAE,MAAKC,eAL1B;AAMI,qBAAa,EAAE,MAAK/F,KAAL,CAAWsD,gBAAX,IAA+B;AANlD,QADJ,CAPJ,CADJ,CAtBJ,CADJ;AA6CH,KAzFmB;;AAGhB,UAAKnB,KAAL,GAAa;AACT6C,kBAAY,EAAE,EADL;AAETF,YAAM,EAAE;AAFC,KAAb;AAHgB;AAOnB;;;EArBqBjC,+C;;6EAApBqB,W,eACiB;AACf8B,aAAW,EAAEjD,kDAAS,CAACK,IAAV,CAAeD,UADb;AAEfkB,cAAY,EAAEtB,kDAAS,CAACK,IAAV,CAAeD,UAFd;AAGf0B,iBAAe,EAAE9B,kDAAS,CAACK,IAAV,CAAeD,UAHjB;AAIfjD,cAAY,EAAE6C,kDAAS,CAACK,IAAV,CAAeD,UAJd;AAKf4B,aAAW,EAAEhC,kDAAS,CAACK,IAAV,CAAeD,UALb;AAOfG,kBAAgB,EAAEP,kDAAS,CAACQ,MAAV,CAAiBJ,UAPpB;AASfiC,UAAQ,EAAErC,kDAAS,CAACM,GAAV,CAAcF,UATT;AAUfM,SAAO,EAAEV,kDAAS,CAACM,GAAV,CAAcF;AAVR,C;;AAyGvB,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAIC,gEAAkB,CACrD;AAAEmC,eAAW,EAAXA,qEAAF;AAAe3B,gBAAY,EAAZA,sEAAf;AAA6BQ,mBAAe,EAAfA,yEAA7B;AAA8C3E,gBAAY,EAAZA,sEAA9C;AAA4D6E,eAAW,EAAXA,qEAAWA;AAAvE,GADqD,EACsBnB,QADtB,CAAtB;AAAA,CAAnC;;AAGA,IAAME,eAAe,GAAG,SAAlBA,eAAkB;AAAA,MAAgBR,gBAAhB,QAAGS,SAAH,CAAgBT,gBAAhB;AAAA,SAA0C;AAAEA,oBAAgB,EAAhBA;AAAF,GAA1C;AAAA,CAAxB;;AAEeU,0HAAO,CAACF,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CM,mEAAU,CAACC,WAAD,CAAvD,CAAf,E","file":"js/SourcesPage.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, sortable } from '@patternfly/react-table';\n\nimport flatten from 'lodash/flatten';\nimport filter from 'lodash/filter';\nimport ContentLoader from 'react-content-loader';\n\nimport { loadEntities, selectEntity, expandEntity, removeSource, sortEntities } from '../redux/actions/providers';\n\nimport { sourcesViewDefinition } from '../views/sourcesViewDefinition';\n\nconst RowLoader = props => (\n    <ContentLoader\n        height={20}\n        width={480}\n        {...props}\n    >\n        <rect x=\"30\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"7\" />\n        <rect x=\"300\" y=\"0\" rx=\"3\" ry=\"3\" width=\"70\" height=\"7\" />\n        <rect x=\"385\" y=\"0\" rx=\"3\" ry=\"3\" width=\"95\" height=\"7\" />\n        <rect x=\"50\" y=\"12\" rx=\"3\" ry=\"3\" width=\"80\" height=\"7\" />\n        <rect x=\"150\" y=\"12\" rx=\"3\" ry=\"3\" width=\"200\" height=\"7\" />\n        <rect x=\"360\" y=\"12\" rx=\"3\" ry=\"3\" width=\"120\" height=\"7\" />\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"20\" height=\"20\" />\n    </ContentLoader>\n);\n\nclass SourcesSimpleView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filteredColumns = filter(sourcesViewDefinition.columns, c => c.title);\n\n        this.headers = this.filteredColumns.map(col => ({\n            title: col.title,\n            transforms: [sortable]\n        }));\n\n        this.state = {\n            sortBy: {}\n        };\n    }\n\n    componentDidMount = () => this.props.loadEntities();\n\n    onItemSelect = (_event, key, checked) => this.props.selectEntity(key, checked);\n\n    onSort = (_event, key, direction) => {\n        this.props.sortEntities(this.filteredColumns[key].value, direction);\n        this.setState({\n            sortBy: {\n                index: key,\n                direction\n            }\n        });\n    }\n\n    onExpandClick = (_event, _row, rowKey) => this.props.expandEntity(rowKey, true);\n\n    sourceIndexToId = (i) => this.props.entities[i].id;\n\n    renderActions = () => (\n        [\n            {\n                title: 'Remove Source',\n                onClick: (_ev, i) => {\n                    this.props.removeSource(this.sourceIndexToId(i)).then(() => {\n                        this.props.loadEntities();\n                    });\n                }\n            }\n        ]\n    );\n\n    render = () => {\n        const { entities, loaded } = this.props;\n        const rowData = flatten(entities.map(item => (\n            [{ ...item, cells: this.filteredColumns.map(col => item[col.value] || '') }]\n        )));\n\n        if (loaded) {\n            return (\n                <Table\n                    aria-label=\"List of Sources\"\n                    onCollapse={this.onCollapse}\n                    onSort={this.onSort}\n                    sortBy={this.state.sortBy}\n                    rows={rowData}\n                    cells={this.headers}\n                    actions={this.renderActions()}\n                >\n                    <TableHeader />\n                    <TableBody />\n                </Table>\n            );\n        }\n\n        return (\n            <table className=\"sources-placeholder-table pf-m-compact ins-entity-table\">\n                <tbody>\n                    <tr><td><RowLoader /></td></tr>\n                    <tr><td><RowLoader /></td></tr>\n                </tbody>\n            </table>\n        );\n    }\n};\n\nSourcesSimpleView.propTypes = {\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        title: PropTypes.string\n    })).isRequired,\n\n    loadEntities: PropTypes.func.isRequired,\n    selectEntity: PropTypes.func.isRequired,\n    expandEntity: PropTypes.func.isRequired,\n    removeSource: PropTypes.func.isRequired,\n    sortEntities: PropTypes.func.isRequired,\n\n    entities: PropTypes.arrayOf(PropTypes.any),\n    numberOfEntities: PropTypes.number.isRequired,\n    loaded: PropTypes.bool.isRequired,\n\n    history: PropTypes.any.isRequired\n};\n\nSourcesSimpleView.defaultProps = {\n    entities: [],\n    numberOfEntities: 0,\n    loaded: false\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    loadEntities, selectEntity, expandEntity, sortEntities, removeSource }, dispatch);\n\nconst mapStateToProps = ({ providers: { entities, numberOfEntities, loaded } }) => ({ entities, numberOfEntities, loaded });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SourcesSimpleView));\n\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle, Pagination, Section } from '@red-hat-insights/insights-frontend-components';\n\n//import './provider-page.scss';\nimport { addProvider, createSource, filterProviders, loadEntities } from '../redux/actions/providers';\n\nimport { Button } from '@patternfly/react-core';\nimport { Card, CardBody, CardFooter, Modal } from '@patternfly/react-core';\n\nimport SourcesSimpleView from '../components/SourcesSimpleView';\n//import SourcesFilter from '../components/SourcesFilter';\n\nimport { providerColumns } from '../SmartComponents/ProviderPage/providerColumns';\nimport { wizardForm } from '../SmartComponents/ProviderPage/providerForm';\nimport SourcesFormRenderer from '../Utilities/SourcesFormRenderer';\n\nimport { pageAndSize } from '../redux/actions/providers';\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\nclass SourcesPage extends Component {\n    static propTypes = {\n        addProvider: PropTypes.func.isRequired,\n        createSource: PropTypes.func.isRequired,\n        filterProviders: PropTypes.func.isRequired,\n        loadEntities: PropTypes.func.isRequired,\n        pageAndSize: PropTypes.func.isRequired,\n\n        numberOfEntities: PropTypes.number.isRequired,\n\n        location: PropTypes.any.isRequired,\n        history: PropTypes.any.isRequired\n    };\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            itemsPerPage: 10,\n            onPage: 1\n        };\n    }\n\n    submitProvider = (values, _formState) => {\n        this.props.createSource(values).then(() => {\n            this.props.history.replace('/');\n            this.props.loadEntities();\n        }).catch(error => {\n            console.log('CATCH:'); console.log(error);\n            this.props.history.replace('/');\n        });\n    }\n\n    onFilter = (filterColumn, filterValue) => {\n        console.log('onFilter', filterColumn, filterValue);\n        this.props.filterProviders(filterColumn, filterValue);\n    }\n\n    onSetPage = (number) => {\n        this.setState({\n            onPage: number\n        });\n        this.props.pageAndSize(number, this.state.itemsPerPage);\n    }\n\n    onPerPageSelect = (count) => {\n        this.setState({\n            onPage: 1,\n            itemsPerPage: count\n        });\n        this.props.pageAndSize(1, count);\n    }\n\n    render = () => {\n        // const filterColumns = filter(providerColumns, c => c.value);\n\n        const form = wizardForm;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    className='add-source'\n                    isLarge title='Add New Provider'\n                    isOpen={this.props.location.pathname === '/new'}\n                    onClose={this.props.history.goBack}>\n\n                    <SourcesFormRenderer\n                        initialValues={form.initialValues}\n                        schemaType={form.schemaType}\n                        schema={form.schema}\n                        uiSchema={form.uiSchema}\n                        showFormControls={form.showFormControls}\n                        onSubmit={this.submitProvider}\n                    />\n                </Modal>\n                <PageHeader>\n                    <PageHeaderTitle title='Sources'/>\n                    <Link to='/new'>\n                        <Button className='pull-right' variant='secondary'> Add a New Source </Button>\n                    </Link>\n                </PageHeader>\n                <Section type='content'>\n                    <Card>\n                        {/*<CardHeader>\n                            <SourcesFilter columns={filterColumns} onFilter={this.onFilter}/>\n                        </CardHeader>*/}\n                        <CardBody>\n                            <SourcesSimpleView columns={providerColumns}/>\n                        </CardBody>\n                        <CardFooter>\n                            <Pagination\n                                itemsPerPage={this.state.itemsPerPage}\n                                page={this.state.onPage}\n                                direction='up'\n                                onSetPage={this.onSetPage}\n                                onPerPageSelect={this.onPerPageSelect}\n                                numberOfItems={this.props.numberOfEntities || 0}\n                            />\n                        </CardFooter>\n                    </Card>\n                </Section>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators(\n    { addProvider, createSource, filterProviders, loadEntities, pageAndSize }, dispatch);\n\nconst mapStateToProps = ({ providers: { numberOfEntities } }) => ({ numberOfEntities });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SourcesPage));\n"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./src/SmartComponents/ProviderPage/provider-page.scss","webpack:///./src/SmartComponents/ProviderPage/provider-page.scss?a39d","webpack:///./src/PresentationalComponents/SourcesListView/SourcesListView.js","webpack:///./src/PresentationalComponents/SourcesListView/SourcesFilter.js","webpack:///./src/SmartComponents/ProviderPage/ProviderPage.js"],"names":["module","exports","__webpack_require__","push","i","content","options","hmr","transform","insertInto","undefined","update","locals","hot","accept","newContent","a","b","key","idx","Error","dispose","RowLoader","props","react_default","createElement","react_content_loader_es","extends_default","height","width","x","y","rx","ry","SourcesListView","_this","classCallCheck_default","this","possibleConstructorReturn_default","getPrototypeOf_default","call","defineProperty_default","assertThisInitialized_default","loadEntities","_event","checked","selectEntity","direction","sortEntities","filteredColumns","value","setState","sortBy","index","_row","rowKey","expandEntity","isOpen","sourceIndexToId","entities","id","title","onClick","_ev","history","concat","toConsumableArray_default","renderViewLinks","reduce","Object","keys","viewDefinitions","acc","viewName","displayName","_this$props","loaded","rowData","flatten","map","item","objectSpread_default","expanded","cells","col","Link","to","topology_icon","parent","DetailView","sourceId","colSpan","Table","aria-label","onCollapse","onSort","state","rows","headers","actions","renderActions","Header","Body","className","SourcesListView_RowLoader","filter","sourcesViewDefinition","columns","c","transforms","sortable","React","Component","propTypes","PropTypes","arrayOf","shape","string","isRequired","func","any","numberOfEntities","number","bool","defaultProps","connect","_ref","_ref$providers","providers","dispatch","bindActionCreators","withRouter","SourcesFilter","filterValue","column","console","log","onFilter","insights_frontend_components","items","onButtonClick","onFilterButtonClick","ProviderPage","values","formState","createSource","then","replace","catch","error","debug","filterColumn","filterProviders","onPage","pageAndSize","itemsPerPage","count","filterColumns","providerColumns","form","wizardForm","Fragment","Modal","isLarge","location","pathname","onClose","goBack","SourcesFormRenderer","initialValues","schemaType","schema","uiSchema","showFormControls","onSubmit","submitProvider","type","Gallery","Card","CardHeader","CardBody","withLegend","identifier","CardFooter","Button","variant","SourcesListView_SourcesFilter","PresentationalComponents_SourcesListView_SourcesListView","page","onSetPage","onPerPageSelect","numberOfItems","addProvider"],"mappings":"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","file":"js/ProviderPage.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n","\nvar content = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./provider-page.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./provider-page.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./provider-page.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport { TopologyIcon } from '@patternfly/react-icons';\nimport { Table, TableHeader, TableBody, sortable } from '@patternfly/react-table';\n\nimport flatten from 'lodash/flatten';\nimport filter from 'lodash/filter';\nimport reduce from 'lodash/reduce';\nimport ContentLoader from 'react-content-loader';\n\nimport { loadEntities, selectEntity, expandEntity, sortEntities } from '../../redux/actions/providers';\nimport DetailView from '../../PresentationalComponents/DetailView/DetailView';\n\nimport { sourcesViewDefinition } from '../../views/sourcesViewDefinition';\nimport { viewDefinitions } from '../../views/viewDefinitions';\n\nconst RowLoader = props => (\n    <ContentLoader\n        height={20}\n        width={480}\n        {...props}\n    >\n        <rect x=\"30\" y=\"0\" rx=\"3\" ry=\"3\" width=\"250\" height=\"7\" />\n        <rect x=\"300\" y=\"0\" rx=\"3\" ry=\"3\" width=\"70\" height=\"7\" />\n        <rect x=\"385\" y=\"0\" rx=\"3\" ry=\"3\" width=\"95\" height=\"7\" />\n        <rect x=\"50\" y=\"12\" rx=\"3\" ry=\"3\" width=\"80\" height=\"7\" />\n        <rect x=\"150\" y=\"12\" rx=\"3\" ry=\"3\" width=\"200\" height=\"7\" />\n        <rect x=\"360\" y=\"12\" rx=\"3\" ry=\"3\" width=\"120\" height=\"7\" />\n        <rect x=\"0\" y=\"0\" rx=\"0\" ry=\"0\" width=\"20\" height=\"20\" />\n    </ContentLoader>\n);\n\nclass SourcesListView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filteredColumns = filter(sourcesViewDefinition.columns, c => c.title);\n\n        this.headers = this.filteredColumns.map(col => ({\n            title: col.title,\n            transforms: [sortable]\n        })).concat('');\n\n        this.state = {\n            sortBy: {}\n        };\n    }\n\n    componentDidMount = () => this.props.loadEntities();\n\n    //onSelect = (_event, key, application) => {\n    //    console.log('onSelect', key, application);\n    //}\n\n    onItemSelect = (_event, key, checked) => this.props.selectEntity(key, checked);\n\n    onSort = (_event, key, direction) => {\n        // -1 for the expander column\n        this.props.sortEntities(this.filteredColumns[key - 1].value, direction);\n        this.setState({\n            sortBy: {\n                index: key,\n                direction\n            }\n        });\n    }\n\n    onExpandClick = (_event, _row, rowKey) => this.props.expandEntity(rowKey, true);\n\n    onCollapse = (_event, i, isOpen) =>\n        this.props.expandEntity(this.sourceIndexToId(i), isOpen);\n\n    sourceIndexToId = (i) => this.props.entities[i / 2].id;\n\n    renderActions = () => (\n        [\n            {\n                title: 'Show Details',\n                onClick: (_ev, i) => this.props.history.push(`/${this.sourceIndexToId(i)}`)\n            },\n            ...this.renderViewLinks()\n        ]\n    );\n\n    renderViewLinks = () =>\n        reduce(Object.keys(viewDefinitions), (acc, viewName) => (\n            acc.push(\n                {\n                    title: `Show ${viewDefinitions[viewName].displayName}`,\n                    onClick: (_ev, i) => this.props.history.push(`/${this.sourceIndexToId(i)}/${viewName}`)\n                }\n            ) && acc\n        ), []);\n\n    render = () => {\n        const { entities, loaded } = this.props;\n        const rowData = flatten(entities.map((item, index) => (\n            [\n                {\n                    ...item,\n                    isOpen: !!item.expanded,\n                    cells: this.filteredColumns.map(col => item[col.value] || '').concat({\n                        title: <Link key='bar' to={`/${item.id}/topology`}><TopologyIcon /></Link>\n                    })\n                },\n                {\n                    id: item.id + '_detail',\n                    parent: index,\n                    cells: [\n                        {\n                            title: item.expanded ? <DetailView sourceId={item.id}/> : 'collapsed content',\n                            colSpan: 6\n                        }\n                    ]\n                }\n            ]\n        )));\n        // console.log(rowData);\n\n        if (loaded) {\n            return (\n                <Table\n                    aria-label=\"List of Sources\"\n                    onCollapse={this.onCollapse}\n                    onSort={this.onSort}\n                    sortBy={this.state.sortBy}\n                    rows={rowData}\n                    cells={this.headers}\n                    actions={this.renderActions()}\n                >\n                    <TableHeader />\n                    <TableBody />\n                </Table>\n            );\n        }\n\n        return (\n            <table className=\"sources-placeholder-table pf-m-compact ins-entity-table\">\n                <tbody>\n                    <tr><td><RowLoader /></td></tr>\n                    <tr><td><RowLoader /></td></tr>\n                </tbody>\n            </table>\n        );\n    }\n};\n\nSourcesListView.propTypes = {\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        title: PropTypes.string\n    })).isRequired,\n\n    loadEntities: PropTypes.func.isRequired,\n    selectEntity: PropTypes.func.isRequired,\n    expandEntity: PropTypes.func.isRequired,\n    sortEntities: PropTypes.func.isRequired,\n\n    entities: PropTypes.arrayOf(PropTypes.any),\n    numberOfEntities: PropTypes.number.isRequired,\n    loaded: PropTypes.bool.isRequired,\n\n    history: PropTypes.any.isRequired\n};\n\nSourcesListView.defaultProps = {\n    entities: [],\n    numberOfEntities: 0,\n    loaded: false\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    loadEntities, selectEntity, expandEntity, sortEntities }, dispatch);\n\nconst mapStateToProps = ({ providers: { entities, numberOfEntities, loaded } }) => ({ entities, numberOfEntities, loaded });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(SourcesListView));\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { SimpleTableFilter } from '@red-hat-insights/insights-frontend-components';\n\nclass SourcesFilter extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    onFilterButtonClick = (filterValue, column) => {\n        console.log('filter click', column.value, filterValue);\n        this.props.onFilter(column.value, filterValue);\n    }\n\n    render = () =>\n        <SimpleTableFilter\n            options={{\n                title: 'Filter By',\n                items: this.props.columns\n            }}\n            onButtonClick={this.onFilterButtonClick}\n        />\n}\n\nSourcesFilter.propTypes = {\n    columns: PropTypes.arrayOf(PropTypes.shape({\n        value: PropTypes.string,\n        title: PropTypes.string\n    })).isRequired,\n    onFilter: PropTypes.func.isRequired\n};\n\nexport default SourcesFilter;\n","import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Donut, PageHeader, PageHeaderTitle, Pagination, Section } from '@red-hat-insights/insights-frontend-components';\n\nimport './provider-page.scss';\nimport filter from 'lodash/filter';\nimport { addProvider, createSource, filterProviders } from '../../redux/actions/providers';\n\nimport { Button } from '@patternfly/react-core';\nimport { Card, CardHeader, CardBody, CardFooter, Gallery, Modal } from '@patternfly/react-core';\n\nimport SourcesListView from '../../PresentationalComponents/SourcesListView/SourcesListView';\nimport SourcesFilter from '../../PresentationalComponents/SourcesListView/SourcesFilter';\n\nimport { providerColumns } from '../../SmartComponents/ProviderPage/providerColumns';\nimport { wizardForm } from './providerForm';\nimport SourcesFormRenderer from '../../Utilities/SourcesFormRenderer';\n\nimport { pageAndSize } from '../../redux/actions/providers';\n\n/**\n * A smart component that handles all the api calls and data needed by the dumb components.\n * Smart components are usually classes.\n *\n * https://reactjs.org/docs/components-and-props.html\n * https://medium.com/@thejasonfile/dumb-components-and-smart-components-e7b33a698d43\n */\nclass ProviderPage extends Component {\n    static propTypes = {\n        addProvider: PropTypes.func.isRequired,\n        createSource: PropTypes.func.isRequired,\n        filterProviders: PropTypes.func.isRequired,\n        pageAndSize: PropTypes.func.isRequired,\n\n        numberOfEntities: PropTypes.number.isRequired,\n\n        location: PropTypes.any.isRequired,\n        history: PropTypes.any.isRequired\n    };\n\n    constructor (props) {\n        super(props);\n\n        this.state = {\n            itemsPerPage: 10,\n            onPage: 1\n        };\n    }\n\n    submitProvider = (values, formState) => {\n        console.log('submitProvider', values, formState);\n        //this.props.addProvider(values);\n        this.props.createSource(values).then(() => {\n            //this.props.addAlert('Source added', 'success');\n            this.props.history.replace('/');\n        }).catch(error => {\n            console.debug('CATCH:'); console.debug(error);\n            //this.props.addAlert('Source adding failed', 'danger');\n            this.props.history.replace('/');\n        });\n    }\n\n    onFilter = (filterColumn, filterValue) => {\n        console.log('onFilter', filterColumn, filterValue);\n        this.props.filterProviders(filterColumn, filterValue);\n    }\n\n    onSetPage = (number) => {\n        this.setState({\n            onPage: number\n        });\n        this.props.pageAndSize(number, this.state.itemsPerPage);\n    }\n\n    onPerPageSelect = (count) => {\n        this.setState({\n            onPage: 1,\n            itemsPerPage: count\n        });\n        this.props.pageAndSize(1, count);\n    }\n\n    render = () => {\n        const filterColumns = filter(providerColumns, c => c.value);\n\n        const form = wizardForm;\n\n        return (\n            <React.Fragment>\n                <Modal\n                    className='add-source'\n                    isLarge title='Add New Provider'\n                    isOpen={this.props.location.pathname === '/new'}\n                    onClose={this.props.history.goBack}>\n\n                    <SourcesFormRenderer\n                        initialValues={form.initialValues}\n                        schemaType={form.schemaType}\n                        schema={form.schema}\n                        uiSchema={form.uiSchema}\n                        showFormControls={form.showFormControls}\n                        onSubmit={this.submitProvider}\n                    />\n                </Modal>\n                <PageHeader>\n                    <PageHeaderTitle title='Providers'/>\n                </PageHeader>\n                <Section type='content'>\n                    <Gallery>\n                        <Card>\n                            <CardHeader>Karta</CardHeader>\n                            <CardBody>\n                                <Donut withLegend identifier='orech' values={[['Red Hat', 100], ['Google', 10]]}/>\n                            </CardBody>\n                            <CardFooter>Footer</CardFooter>\n                        </Card>\n\n                        <Card>\n                            <CardBody>\n                                <p>5 Cloud</p>\n                                <p>2 Virtual Infrastructure</p>\n                                <p>1 Physical Infrastructure</p>\n                            </CardBody>\n                        </Card>\n\n                        <Card>\n                            <CardBody>\n                                <p>1 Network</p>\n                                <p>0 Storage</p>\n                                <p>0 Automation</p>\n                            </CardBody>\n                        </Card>\n\n                        <Card>\n                            <CardBody>\n                                <Section type='button-group'>\n                                    <Link to='/new'>\n                                        <Button variant='primary'> Add a New Source </Button>\n                                    </Link>\n                                </Section>\n                            </CardBody>\n                        </Card>\n                    </Gallery>\n\n                    <Card>\n                        <CardHeader>\n                            <SourcesFilter columns={filterColumns} onFilter={this.onFilter}/>\n                        </CardHeader>\n                        <CardBody>\n                            <SourcesListView columns={providerColumns}/>\n                        </CardBody>\n                        <CardFooter>\n                            <Pagination\n                                itemsPerPage={this.state.itemsPerPage}\n                                page={this.state.onPage}\n                                direction='up'\n                                onSetPage={this.onSetPage}\n                                onPerPageSelect={this.onPerPageSelect}\n                                numberOfItems={this.props.numberOfEntities || 0}\n                            />\n                        </CardFooter>\n                    </Card>\n                </Section>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ addProvider, createSource, filterProviders, pageAndSize }, dispatch);\n\nconst mapStateToProps = ({ providers: { numberOfEntities } }) => ({ numberOfEntities });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(ProviderPage));\n"],"sourceRoot":""}